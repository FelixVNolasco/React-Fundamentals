{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifItem.js","components/GifComponent.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifItem","className","src","alt","GifComponent","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAkBP,GAAlB,mBAAiCO,OAC/CN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,SAdD,SAACN,GACvBF,EAAcE,EAAEO,OAAOC,QAa6BA,MAAOX,O,+BCrBtDY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAKE,MACZV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAU,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,6DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAI,KACnB,4BAAIN,QCDHO,EAAe,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAE3B,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAAEqB,KAAM,GAAIa,SAAS,IAAxD,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAChB,GAAD,OAAUc,EAAS,CAAEf,KAAMC,EAAMY,SAAS,SAClE,CAACpB,IAEGqB,EDJ0BI,CAAazB,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,eAAC,WAAD,WACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,4CAEZ,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,eAA0BA,GAAZA,EAAIC,aEbpCe,EAAe,WAExB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACI,eAAC,WAAD,WACI,yCACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQS,EAAWe,KAAI,SAACT,GACZ,OAAO,cAAC,EAAD,CAA6BA,SAAUA,GAApBA,Y,MCdlD2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ca46a0c5.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((categories) => [ inputValue, ...categories ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    \r\n    return (        \r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" onChange={handleInputChange} value={inputValue} />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=hSGB2ji6CkyaDC3UILV7dVHBZ5pW1R25&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img?.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    // console.log(gifs);\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-0.5s\">\r\n            <img src={url} alt=\"\"/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifItem } from './GifItem';\r\n\r\nexport const GifComponent = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h5 className=\"animate__animated animate__fadeIn\">{category}</h5>\r\n\r\n            {loading && <p>Cargando...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => {\r\n                        return <GifItem key={img.id} {...img} />\r\n                    })\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({ data: [], loading: true })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((gifs) => setstate({ data: gifs, loading: false }));\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\n\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifComponent } from './components/GifComponent';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Radiohead']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( (categories) => [...categories, 'Mac Demarco']);\r\n    // }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GIF App</h2>\r\n            <hr />\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map((category) => {\r\n                        return <GifComponent key={category} category={category} />\r\n                    })\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(  \n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}